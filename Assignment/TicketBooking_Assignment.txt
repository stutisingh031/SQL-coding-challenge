------------------TASK 1 Database Design ------------

use TicketBookingSystem;
show tables;
describe event;

insert into venue(venue_name,address) values
('mumbai', 'marol andheri (w)'),
('chennai', 'IT Park'),
('pondicherry', 'state beach');

select * from venue;

------------------TASK 2 ---------------------------

QUS 1. Write a SQL query to insert at least 10 sample records into each table.

---------------INSERTION IN TABLE CUSTOMER-----------------

insert into customer(customer_name,email, phone_number) values
('harry potter', 'harry@gmail.com', '45454545'),
('ronald weasley', 'ron@gmail.com', '45454545'),
('hermione granger', 'her@gmail.com', '45454545'),
('draco malfoy', 'drac@gmail.com', '45454545'),
('ginni weasley', 'ginni@gmail.com', '45454545'),
('severus snape','sev@gmail.com',56556);

select * from customer;

-- -----------INSERTION IN TABLE EVENT----------------------

insert into event(event_name,event_date,event_time,total_seats, available_seats,ticket_price,event_type,venue_id)
values
('shilpa rao Music show', '2021-09-12', '20:00',320,270,500, 'concert',3),
('astha gill', '2024-05-1','19:30', 23000,3,3600, 'concert', 2),
('arjit singh Music show ', '2024-04-19', '20:30', 23000,10,2000, 'concert', 2),
('MI vs csk', '2024-05-08', '17:30', 38000,100,4000, 'sports', 1);
select * from event;

-- ------------------INSERTION IN TABLE BOOKING--------------


insert into booking (event_id,customer_id,num_tickets,total_cost,booking_date) values
(4,1,2,640,'2021-09-12'),
(4,4,3,960,'2021-09-12'),
(5,1,3,10800,'2024-04-11'),
(5,3,5,18000,'2024-04-10'),
(6,5,10,34000,'2024-04-15'),
(7,2,4,32000,'2024-05-01');
select * from booking;
---------------------------------------------------------------------------
QUS2.  2. Write a SQL query to list all Events

select * from event;
select event_name,available_seats from event;

*/output

shilpa rao Music show	270
astha gill	         3
arjit singh Music show 	10
MI vs csk	        100
/* 

----------------------------------------------------------------------
Qus3. Write a SQL query to select events with available tickets.

select event_name
from event
where event_name LIKE '%arjit singh%';

------------------------------------------------------
qus5. Write a SQL query to select events with ticket price range is between 1000 to 2500.

select event_name,ticket_price 
from event
where ticket_price between 1000 AND 2500;

*/output

arjit singh Music show 	2000

/*



-----------------------------------------------------
qus6. Write a SQL query to retrieve events with dates falling within a specific range

select event_name,event_date
from event
where event_date between '2024-5-1' AND '2024-5-8';

*/output

astha gill	2024-05-01
MI vs csk	2024-05-08


--------------------------------------------------------------
qus7. Write a SQL query to retrieve events with available tickets that a have "Concert" in their name

select event_name,available_seats
from event 
where event_name LIKE '%arjit singh Music show%';
*/output



/*

-------------------------------------------------------------
qus8. Write a SQL query to retrieve users in batches of 2, starting from the 3th user.


select *
from customer
limit 2,3;

*/output
3	hermione granger her@gmail.com	45454545
4	draco malfoy	drac@gmail.com	45454545
5	ginni weasley	ginni@gmail.com	45454545


/*

--------------------------------------------------------
9. Write a SQL query to retrieve bookings details contains booked no of ticket more than 4

select * 
from booking
where num_tickets>4;

*/output

10	2	3	5	18000	2024-04-10
11	3	5	10	34000	2024-04-15


/*


-------------------------------------------------------
qus10. Write a SQL query to retrieve customer information whose phone number end with '000

select * 
from customer
where phone_number LIKE '%4545';

*/output
1	harry potter	 harry@gmail.com	45454545
2	ronald weasley	 ron@gmail.com	        45454545
3	hermione granger her@gmail.com	        45454545
4	draco malfoy	 drac@gmail.com  	45454545
5	ginni weasley	 ginni@gmail.com	45454545


/*

--------------------------------------------------------
qus11. Write a SQL query to retrieve the events in order whose seat capacity more than 20000.

select event_name,total_seats
from event
where total_seats>20000
order by total_seats DESC;

*/output

MI vs csk	        38000
astha gill	        23000
arjit singh Music show 	23000


/*


----------------------------------------------------------------
qus 12. Write a SQL query to select events name not start with 'x', 'y', '
select event_name
from event
where event_name not like 'a%';

*/output

shilpa rao Music show
MI vs csk


/*

-----------------------------------------------------------------------

-- -------------------TASK3 -------------------------------------------
1. Write a SQL query to List Events and Their Average Ticket Prices.

 
select e.event_name, avg(b.total_cost) as average
from event e, booking b
where e.event_id=b.event_id
group by e.event_name;

*/output

arjit singh Music show 	 34000.0000
astha gill	         14400.0000
MI vs csk	         32000.0000
shilpa rao Music show	 800.0000


/*


------------------------------------------------------------------------
2. Write a SQL query to Calculate the Total Revenue Generated by Events.

select e.event_name, sum(b.total_cost) as total
from event e, booking b
where e.event_id=b.event_id
group by e.event_name;

*/output

arjit singh Music show 	34000
astha gill	        28800
MI vs csk	        32000
shilpa rao Music show	1600


/*

---------------------------------------------------------------------------
3. Write a SQL query to find the event with the highest ticket sales.

select e.event_name, sum(b.total_cost) as total
from event e, booking b
where e.event_id=b.event_id
group by e.event_name
order by total desc
limit 1; 

*/output
   arjit singh Music show 	34000

/*

--------------------------------------------------------------------------
4. Write a SQL query to Calculate the Total Number of Tickets Sold for Each Event.

select e.event_name, sum(b.num_tickets) as total_tickets
from event e, booking b
where e.event_id=b.event_id
group by e.event_name;

*/output

arjit singh Music show 	10
astha gill	        8
MI vs csk	        4
shilpa rao Music show	5


/*

----------------------------------------------------------------------
5. Write a SQL query to Find Events with No Ticket Sales.

select e.event_name
from event e, booking b
where e.event_id=b.event_id AND b.num_tickets=4
group by e.event_name;

*/output
MI vs csk

/*

-------------------------------------------------------------------
6. Write a SQL query to Find the User Who Has Booked the Most Tickets.


select c.customer_name, sum(b.num_tickets) as total_tickets
from event e, booking b, customer c
where e.event_id=b.event_id AND b.customer_id=c.customer_id
group by c.customer_name
order by total_tickets DESC
limit 1;
*/output

ginni weasley	10


/*

-------------------------------------------------------------
7. Write a SQL query to List Events and the total number of tickets sold for each month.

select e.event_name, EXTRACT(MONTH FROM e.event_date) as month, sum(b.num_tickets) as sum
from event e, booking b
where e.event_id=b.event_id
group by EXTRACT(MONTH FROM e.event_date);

*/output
arjit singh Music show 	4    10
astha gill	        5    12
shilpa rao Music show	9    5


/*


----------------------------------------------------------
8. Write a SQL query to calculate the average Ticket Price for Events in Eal Venue.

select v.venue_name, avg(ticket_price) as average
from event e, venue v
where e.venue_id=v.venue_id
group by v.venue_name;
*/output

chennai	       2800
mumbai	       4000
pondicherry	500


/*

--------------------------------------------------------------------

9. Write a SQL query to calculate the total Number of Tickets Sold for Each Event Type

select e.event_type, sum(b.num_tickets) as total_tickets
from event e, booking b
where e.event_id=b.event_id
group by e.event_type;
*/output

concert	23
sports	4


/*


--------------------------------------------------------------

10. Write a SQL query to calculate the total Revenue Generated by Events in Each Year.

select EXTRACT(YEAR FROM e.event_date) as Year, sum(b.total_cost) as total_cost
from event e, booking b
where e.event_id=b.event_id
group by EXTRACT(YEAR FROM e.event_date);
*/output

2021	1600
2024	94800

/*
---------------------------------------------------------------------------11. Write a SQL query to list users who have booked tickets for multiple events.

SELECT c.customer_name, c.email, c.phone_number, COUNT(*) AS num_bookings
FROM customer c
JOIN booking b ON c.customer_id = b.customer_id
GROUP BY c.customer_id
HAVING COUNT(*) > 1;

*/output
harry potter	harry@gmail.com	 45454545	2

/*
-------------------------------------------------------------------------

12. Write a SQL query to calculate the Total Revenue Generated by Events for Each User.

SELECT c.customer_name, c.email, c.phone_number, SUM(b.total_cost) AS total_revenue
FROM customer c
JOIN booking b ON c.customer_id = b.customer_id
JOIN event e ON b.event_id = e.event_id
GROUP BY c.customer_id;

*/output
 harry potter	harry@gmail.com	       45454545	        11440
ronald weasley	ron@gmail.com	       45454545	        32000
hermione granger	her@gmail.com  45454545	         18000
draco malfoy	drac@gmail.com	        45454545	 960
ginni weasley	ginni@gmail.com	        45454545	 34000

/*

------------------------------------------------------------------------

13. Write a SQL query to calculate the Average Ticket Price for Events in Each Category and Venue.

SELECT e.event_type, v.venue_name, AVG(e.ticket_price) AS avg_ticket_price
FROM event e
JOIN venue v ON e.venue_id = v.venue_id
GROUP BY e.event_type, v.venue_name;

*/output
concert	chennai	       2800
concert	pondicherry	500
sports	mumbai	       4000

/*

-------------------------------------------------------------------------
14. Write a SQL query to list Users and the Total Number of Tickets They've Purchased in the Last 30 Days.

SELECT c.customer_name, c.email, c.phone_number, SUM(b.num_tickets) AS total_tickets_purchased
FROM customer c
JOIN booking b ON c.customer_id = b.customer_id
WHERE b.booking_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
GROUP BY c.customer_id;

*/output
harry potter	harry@gmail.com	       45454545	       3
ronald weasley	ron@gmail.com	       45454545	       4
hermione granger	her@gmail.com  45454545	       5
ginni weasley	ginni@gmail.com	       45454545	       10

/*
---------------------------------------------------------------------------